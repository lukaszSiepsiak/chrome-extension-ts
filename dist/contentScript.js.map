{"version":3,"file":"contentScript.js","mappings":"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","sources":["webpack://chrome-extension-ts/./src/popup.ts","webpack://chrome-extension-ts/webpack/bootstrap","webpack://chrome-extension-ts/webpack/runtime/compat get default export","webpack://chrome-extension-ts/webpack/runtime/define property getters","webpack://chrome-extension-ts/webpack/runtime/hasOwnProperty shorthand","webpack://chrome-extension-ts/webpack/runtime/make namespace object","webpack://chrome-extension-ts/./src/contentScript.ts"],"sourcesContent":["document?.addEventListener('DOMContentLoaded', () => {\r\n    alert('DOMContentLoaded');\r\n\r\n    fillExtensionInformation();\r\n    bindExtensionCheckButton();\r\n    //bindServiceWorkerMessages();\r\n});\r\n\r\nconst isChromeRuntimeHealthy = () => window.chrome && chrome?.runtime;\r\n\r\nfunction bindExtensionCheckButton() {\r\n    const updateButton = document.getElementById('extension-check-button');\r\n\r\n    if (updateButton) {\r\n        updateButton.addEventListener('click', () => {\r\n            checkForUpdates();\r\n        });\r\n    } else {\r\n        console.error('Button not found!');\r\n    }\r\n}\r\n\r\nfunction fillExtensionInformation() {\r\n    if (isChromeRuntimeHealthy()) {\r\n        const manifest = chrome.runtime.getManifest();\r\n\r\n        var extensionName = document.getElementById('extension-name');\r\n        var extensionVersion = document.getElementById('extension-version');\r\n\r\n        if (extensionName != null) {\r\n            extensionName.innerText = manifest.name;\r\n        }\r\n\r\n        if (extensionVersion != null) {\r\n            extensionVersion.innerText = 'Version: ' + manifest.version;\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkForUpdates() {\r\n    if (isChromeRuntimeHealthy() && chrome.runtime.requestUpdateCheck) {\r\n        chrome.runtime.requestUpdateCheck((status, details) => {\r\n            if (status === 'update_available') {\r\n                alert('New version available: ' + details?.version);\r\n                // Logic to handle the update, for example, reload the extension\r\n                chrome.runtime.reload();\r\n\r\n                alert('Extension was reloaded successfully');\r\n            } else if (status === 'no_update') {\r\n                alert('No new updates available.');\r\n            } else if (status === 'throttled') {\r\n                alert('Update check throttled. Trying again later.');\r\n                // Schedule the next check in a few hours\r\n                setTimeout(checkForUpdates, 4 * 60 * 60 * 1000); // 4 hours\r\n            } else {\r\n                alert('Error checking for updates: ' + status);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction bindServiceWorkerMessages() {\r\n    if (isChromeRuntimeHealthy()) {\r\n        const port = chrome.runtime.connect({ name: 'popup' });\r\n\r\n        port.onMessage.addListener((message) => {\r\n            if (chrome.runtime.lastError) {\r\n                console.error('Error receiving message:', chrome.runtime.lastError.message);\r\n\r\n                port.postMessage(chrome.runtime.lastError.message);\r\n                return;\r\n            }\r\n\r\n            if (message.action == 'chromeStarted') {\r\n                alert(`Chrome runtime started`);\r\n\r\n                port.postMessage('Chrome runtime started');\r\n\r\n                return true;\r\n            } else if (message.action == 'chromeConnected') {\r\n                alert(`Chrome runtime connected`);\r\n\r\n                port.postMessage('Chrome runtime connected');\r\n\r\n                return true;\r\n            } else if (message.action == 'extensionInstalled') {\r\n                alert(`Extension installed`);\r\n\r\n                port.postMessage('chrome.runtime.onInstalled');\r\n\r\n                return true;\r\n            } else if (message.action == 'extensionUpdateAvailable') {\r\n                alert(`New version available: ${message.data}`);\r\n\r\n                chrome.runtime.reload();\r\n\r\n                port.postMessage('Extension reloaded');\r\n\r\n                return true;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n}\r\n\r\ncheckForUpdates();\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './popup';\r\n"],"names":[],"sourceRoot":""}