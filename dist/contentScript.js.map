{"version":3,"file":"contentScript.js","mappings":";;;;;;;;;;;AAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChD,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAC1B,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAE9C,IAAI,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;IAC9D,IAAI,gBAAgB,GAAG,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;IAEpE,IAAI,aAAa,IAAI,IAAI,EAAE;QACvB,aAAa,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;KAC3C;IAED,IAAI,gBAAgB,IAAI,IAAI,EAAE;QAC1B,gBAAgB,CAAC,SAAS,GAAG,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC;KAC/D;IAED,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC;IAEvE,IAAI,YAAY,EAAE;QACd,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE;YACnC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE;gBAClD,IAAI,MAAM,KAAK,kBAAkB,EAAE;oBAC/B,KAAK,CAAC,yBAAyB,IAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,EAAC,CAAC;oBAEpD,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;iBAC3B;qBAAM,IAAI,MAAM,KAAK,WAAW,EAAE;oBAC/B,KAAK,CAAC,2BAA2B,CAAC,CAAC;iBACtC;qBAAM;oBACH,KAAK,CAAC,8BAA8B,GAAG,MAAM,CAAC,CAAC;iBAClD;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;KACN;SAAM;QACH,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;KACtC;AACL,CAAC,CAAC,CAAC;;;;;;;UClCH;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNiB","sources":["webpack://chrome-extension-ts/./src/popup.ts","webpack://chrome-extension-ts/webpack/bootstrap","webpack://chrome-extension-ts/webpack/runtime/compat get default export","webpack://chrome-extension-ts/webpack/runtime/define property getters","webpack://chrome-extension-ts/webpack/runtime/hasOwnProperty shorthand","webpack://chrome-extension-ts/webpack/runtime/make namespace object","webpack://chrome-extension-ts/./src/contentScript.ts"],"sourcesContent":["document?.addEventListener('DOMContentLoaded', () => {\r\n    alert('DOMContentLoaded');\r\n    const manifest = chrome.runtime.getManifest();\r\n\r\n    var extensionName = document.getElementById('extension-name');\r\n    var extensionVersion = document.getElementById('extension-version');\r\n\r\n    if (extensionName != null) {\r\n        extensionName.innerText = manifest.name;\r\n    }\r\n\r\n    if (extensionVersion != null) {\r\n        extensionVersion.innerText = 'Version: ' + manifest.version;\r\n    }\r\n\r\n    const updateButton = document.getElementById('extension-check-button');\r\n\r\n    if (updateButton) {\r\n        updateButton.addEventListener('click', function () {\r\n            chrome.runtime.requestUpdateCheck((status, details) => {\r\n                if (status === 'update_available') {\r\n                    alert('New version available: ' + details?.version);\r\n                    // Logic to handle the update, for example, reload the extension\r\n                    chrome.runtime.reload();\r\n                } else if (status === 'no_update') {\r\n                    alert('No new updates available.');\r\n                } else {\r\n                    alert('Error checking for updates: ' + status);\r\n                }\r\n            });\r\n        });\r\n    } else {\r\n        console.error('Button not found!');\r\n    }\r\n});\r\n\r\n// chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n//     if (message.action == 'chromeStarted') {\r\n//         alert(`Chrome runtime started. Sender url: ${sender.url}`);\r\n\r\n//         sendResponse('Chrome runtime started');\r\n\r\n//         return true;\r\n//     } else if (message.action == 'chromeConnected') {\r\n//         alert(`Chrome runtime connected. Sender url: ${sender.url}`);\r\n\r\n//         sendResponse('Chrome runtime connected');\r\n\r\n//         return true;\r\n//     } else if (message.action == 'extensionInstalled') {\r\n//         alert(`Extension installed. Sender url: ${sender?.url}`);\r\n\r\n//         sendResponse('Extension installed');\r\n\r\n//         return true;\r\n//     } else if (message.action == 'extensionUpdateAvailable') {\r\n//         alert(`New version available: ${message.data}. Sender url: ${sender.url}`);\r\n\r\n//         chrome.runtime.reload();\r\n\r\n//         sendResponse('Extension reloaded');\r\n\r\n//         return true;\r\n//     }\r\n// });\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './popup';\r\n"],"names":[],"sourceRoot":""}